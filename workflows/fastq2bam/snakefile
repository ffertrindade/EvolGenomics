configfile: "config_mapping.yaml"

rule all:
	input:
#		expand("trimmed_reads/{sample}_{pair}.trimmed.fastq.gz", pair={1,2}, sample=config["samples"]),
		expand("sorted_reads/{sample}.sorted.bam", sample=config["samples"]),
		expand("sorted_reads/{sample}.sorted.bam.bai", sample=config["samples"]),
		expand("qualimap/{sample}.pdf", sample=config["samples"])

rule adapterremoval:
	message: """##### Running AdapterRemoval... #####"""
	input:
		expand("/mnt/d/leopard_data/{{sample}}_{pair}.fastq.gz", pair={1,2})
	output:
		expand("trimmed_reads/{{sample}}_{pair}.trimmed.fastq.gz", pair={1,2})
	threads:
		config["threads"]
	params:
		adap1={config["adap1"]},
		adap2={config["adap2"]},
		maxns={config["maxns"]},
		minquality={config["minquality"]},
		minlength={config["minlength"]}
	log:
		"logs/trimmed_reads/{sample}.log"
	shell:
		"AdapterRemoval --adapter1 {params.adap1} --adapter2 {params.adap2} "
		" --file1 {input[0]} --file2 {input[1]}"
		" --output1 {output[0]} --output2 {output[1]}"
		" --trimns --maxns {params.maxns} "
		" --trimqualities --minquality {params.minquality}"
		" --minlength {params.minlength} --gzip --threads {threads} 2> {log}"

rule bwa_map:
	message: """##### Running BWA... #####"""
	input:
		{config["reference"]},
		expand("/mnt/d/leopard_data/{{sample}}_{pair}.fastq.gz", pair={1,2})
	output:
		temp("mapped_reads/{sample}.bam")
	threads:
		config["threads"]
	params:
		rg=r"@RG\tID:{sample}\tSM:{sample}"
	log:
		"logs/mapped_reads/{sample}.log"
	shell:
		"(bwa mem -R '{params.rg}' -t {threads} {input} |"
		"samtools view -Shb - > {output}) 2> {log}"

rule samtools_sort:
	message: """##### Running sorting... #####"""
	input:
		"mapped_reads/{sample}.bam"
	output:
		"sorted_reads/{sample}.sorted.bam"
	log:
		"logs/sorted_reads/{sample}.log"
	shell:
		"""(samtools sort -T sorted_reads/{wildcards.sample} -O bam {input} > {output}) 2> {log}"""

rule samtools_index:
	message: """##### Running indexing... #####"""
	input:
		"sorted_reads/{sample}.sorted.bam"
	output:
		"sorted_reads/{sample}.sorted.bam.bai"
	log:
		"logs/sorted_reads/{sample}.samtools_index.log"
	shell:
		"""(samtools index {input}) 2> {log}"""

rule qualimap:
	message: """##### Running qualimap... #####"""
	input:
		"sorted_reads/{sample}.sorted.bam"
	output:
		"qualimap/{sample}.pdf"
	threads:
		config["threads"]
	log:
		"logs/qualimap/{sample}.qualimap.log"
	shell:
		"""(qualimap bamqc -c -nt {threads} -bam {input} -outfile {wildcards.sample}.pdf -outdir qualimap) 2> {log}"""
